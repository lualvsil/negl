import negl/types

const
  EGL_FRONT_BUFFER_AUTO_REFRESH_ANDROID* = 0x314C
  EGL_TIMESTAMP_PENDING_ANDROID* = cast[EGLnsecsANDROID](-2)
  EGL_TIMESTAMP_INVALID_ANDROID* = cast[EGLnsecsANDROID](-1)
  EGL_TIMESTAMPS_ANDROID* = 0x3430
  EGL_COMPOSITE_DEADLINE_ANDROID* = 0x3431
  EGL_COMPOSITE_INTERVAL_ANDROID* = 0x3432
  EGL_COMPOSITE_TO_PRESENT_LATENCY_ANDROID* = 0x3433
  EGL_REQUESTED_PRESENT_TIME_ANDROID* = 0x3434
  EGL_RENDERING_COMPLETE_TIME_ANDROID* = 0x3435
  EGL_COMPOSITION_LATCH_TIME_ANDROID* = 0x3436
  EGL_FIRST_COMPOSITION_START_TIME_ANDROID* = 0x3437
  EGL_LAST_COMPOSITION_START_TIME_ANDROID* = 0x3438
  EGL_FIRST_COMPOSITION_GPU_FINISHED_TIME_ANDROID* = 0x3439
  EGL_DISPLAY_PRESENT_TIME_ANDROID* = 0x343A
  EGL_DEQUEUE_READY_TIME_ANDROID* = 0x343B
  EGL_READS_DONE_TIME_ANDROID* = 0x343C
  EGL_NATIVE_BUFFER_ANDROID* = 0x3140
  EGL_RECORDABLE_ANDROID* = 0x3142
  EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT* = 0x30BF
  EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT* = 0x3138
  EGL_NO_RESET_NOTIFICATION_EXT* = 0x31BE
  EGL_LOSE_CONTEXT_ON_RESET_EXT* = 0x31BF
  EGL_GL_COLORSPACE_DEFAULT_EXT* = 0x314D
  EGL_COLOR_COMPONENT_TYPE_EXT* = 0x3339
  EGL_COLOR_COMPONENT_TYPE_FIXED_EXT* = 0x333A
  EGL_COLOR_COMPONENT_TYPE_FLOAT_EXT* = 0x333B
  EGL_CTA861_3_MAX_CONTENT_LIGHT_LEVEL_EXT* = 0x3360
  EGL_CTA861_3_MAX_FRAME_AVERAGE_LEVEL_EXT* = 0x3361
  EGL_SMPTE2086_DISPLAY_PRIMARY_RX_EXT* = 0x3341
  EGL_SMPTE2086_DISPLAY_PRIMARY_RY_EXT* = 0x3342
  EGL_SMPTE2086_DISPLAY_PRIMARY_GX_EXT* = 0x3343
  EGL_SMPTE2086_DISPLAY_PRIMARY_GY_EXT* = 0x3344
  EGL_SMPTE2086_DISPLAY_PRIMARY_BX_EXT* = 0x3345
  EGL_SMPTE2086_DISPLAY_PRIMARY_BY_EXT* = 0x3346
  EGL_SMPTE2086_WHITE_POINT_X_EXT* = 0x3347
  EGL_SMPTE2086_WHITE_POINT_Y_EXT* = 0x3348
  EGL_SMPTE2086_MAX_LUMINANCE_EXT* = 0x3349
  EGL_SMPTE2086_MIN_LUMINANCE_EXT* = 0x334A
  EGL_METADATA_SCALING_EXT* = 50000
  EGL_YUV_ORDER_EXT* = 0x3301
  EGL_YUV_NUMBER_OF_PLANES_EXT* = 0x3311
  EGL_YUV_SUBSAMPLE_EXT* = 0x3312
  EGL_YUV_DEPTH_RANGE_EXT* = 0x3317
  EGL_YUV_CSC_STANDARD_EXT* = 0x330A
  EGL_YUV_PLANE_BPP_EXT* = 0x331A
  EGL_YUV_BUFFER_EXT* = 0x3300
  EGL_YUV_ORDER_YUV_EXT* = 0x3302
  EGL_YUV_ORDER_YVU_EXT* = 0x3303
  EGL_YUV_ORDER_YUYV_EXT* = 0x3304
  EGL_YUV_ORDER_UYVY_EXT* = 0x3305
  EGL_YUV_ORDER_YVYU_EXT* = 0x3306
  EGL_YUV_ORDER_VYUY_EXT* = 0x3307
  EGL_YUV_ORDER_AYUV_EXT* = 0x3308
  EGL_YUV_SUBSAMPLE_4_2_0_EXT* = 0x3313
  EGL_YUV_SUBSAMPLE_4_2_2_EXT* = 0x3314
  EGL_YUV_SUBSAMPLE_4_4_4_EXT* = 0x3315
  EGL_YUV_DEPTH_RANGE_LIMITED_EXT* = 0x3318
  EGL_YUV_DEPTH_RANGE_FULL_EXT* = 0x3319
  EGL_YUV_CSC_STANDARD_601_EXT* = 0x330B
  EGL_YUV_CSC_STANDARD_709_EXT* = 0x330C
  EGL_YUV_CSC_STANDARD_2020_EXT* = 0x330D
  EGL_YUV_PLANE_BPP_0_EXT* = 0x331B
  EGL_YUV_PLANE_BPP_8_EXT* = 0x331C
  EGL_YUV_PLANE_BPP_10_EXT* = 0x331D
  EGL_CONTEXT_PRIORITY_LEVEL_IMG* = 0x3100
  EGL_CONTEXT_PRIORITY_HIGH_IMG* = 0x3101
  EGL_CONTEXT_PRIORITY_MEDIUM_IMG* = 0x3102
  EGL_CONTEXT_PRIORITY_LOW_IMG* = 0x3103
  EGL_CONTEXT_MAJOR_VERSION_KHR* = 0x3098
  EGL_CONTEXT_MINOR_VERSION_KHR* = 0x30FB
  EGL_CONTEXT_FLAGS_KHR* = 0x30FC
  EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR* = 0x30FD
  EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR* = 0x31BD
  EGL_NO_RESET_NOTIFICATION_KHR* = 0x31BE
  EGL_LOSE_CONTEXT_ON_RESET_KHR* = 0x31BF
  EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR* = 0x00000001
  EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR* = 0x00000002
  EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR* = 0x00000004
  EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR* = 0x00000001
  EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR* = 0x00000002
  EGL_OPENGL_ES3_BIT_KHR* = 0x00000040
  EGL_CONTEXT_OPENGL_NO_ERROR_KHR* = 0x31B3
  EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR* = 0x30F0
  EGL_SYNC_CONDITION_KHR* = 0x30F8
  EGL_SYNC_FENCE_KHR* = 0x30F9
  EGL_GL_COLORSPACE_KHR* = 0x309D
  EGL_GL_COLORSPACE_SRGB_KHR* = 0x3089
  EGL_GL_COLORSPACE_LINEAR_KHR* = 0x308A
  EGL_GL_RENDERBUFFER_KHR* = 0x30B9
  EGL_GL_TEXTURE_2D_KHR* = 0x30B1
  EGL_GL_TEXTURE_LEVEL_KHR* = 0x30BC
  EGL_GL_TEXTURE_3D_KHR* = 0x30B2
  EGL_GL_TEXTURE_ZOFFSET_KHR* = 0x30BD
  EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR* = 0x30B3
  EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR* = 0x30B4
  EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR* = 0x30B5
  EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR* = 0x30B6
  EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR* = 0x30B7
  EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR* = 0x30B8
  EGL_NATIVE_PIXMAP_KHR* = 0x30B0
  EGL_NO_IMAGE_KHR* = cast[EGLImageKHR](0)
  EGL_IMAGE_PRESERVED_KHR* = 0x30D2
  EGL_READ_SURFACE_BIT_KHR* = 0x0001
  EGL_WRITE_SURFACE_BIT_KHR* = 0x0002
  EGL_LOCK_SURFACE_BIT_KHR* = 0x0080
  EGL_OPTIMAL_FORMAT_BIT_KHR* = 0x0100
  EGL_MATCH_FORMAT_KHR* = 0x3043
  EGL_FORMAT_RGB_565_EXACT_KHR* = 0x30C0
  EGL_FORMAT_RGB_565_KHR* = 0x30C1
  EGL_FORMAT_RGBA_8888_EXACT_KHR* = 0x30C2
  EGL_FORMAT_RGBA_8888_KHR* = 0x30C3
  EGL_MAP_PRESERVE_PIXELS_KHR* = 0x30C4
  EGL_LOCK_USAGE_HINT_KHR* = 0x30C5
  EGL_BITMAP_POINTER_KHR* = 0x30C6
  EGL_BITMAP_PITCH_KHR* = 0x30C7
  EGL_BITMAP_ORIGIN_KHR* = 0x30C8
  EGL_BITMAP_PIXEL_RED_OFFSET_KHR* = 0x30C9
  EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR* = 0x30CA
  EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR* = 0x30CB
  EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR* = 0x30CC
  EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR* = 0x30CD
  EGL_LOWER_LEFT_KHR* = 0x30CE
  EGL_UPPER_LEFT_KHR* = 0x30CF
  EGL_MUTABLE_RENDER_BUFFER_BIT_KHR* = 0x1000
  EGL_NO_CONFIG_KHR* = cast[EGLConfig](0)
  EGL_BUFFER_AGE_KHR* = 0x313D
  EGL_SYNC_STATUS_KHR* = 0x30F1
  EGL_SIGNALED_KHR* = 0x30F2
  EGL_UNSIGNALED_KHR* = 0x30F3
  EGL_TIMEOUT_EXPIRED_KHR* = 0x30F5
  EGL_CONDITION_SATISFIED_KHR* = 0x30F6
  EGL_SYNC_TYPE_KHR* = 0x30F7
  EGL_SYNC_REUSABLE_KHR* = 0x30FA
  EGL_SYNC_FLUSH_COMMANDS_BIT_KHR* = 0x0001
  EGL_FOREVER_KHR* = 0xFFFFFFFFFFFFFFFF
  EGL_NO_SYNC_KHR* = cast[EGLSyncKHR](0)

type AHardwareBuffer* = object

proc eglGetCompositorTimingSupportedANDROID*(dpy: EGLDisplay, surface: EGLSurface, name: EGLint): EGLBoolean {.cdecl, importc.}
proc eglGetCompositorTimingANDROID*(dpy: EGLDisplay, surface: EGLSurface, numTimestamps: EGLint, names: ptr EGLint, values: ptr EGLnsecsANDROID): EGLBoolean {.cdecl, importc.}
proc eglGetNextFrameIdANDROID*(dpy: EGLDisplay, surface: EGLSurface, frameId: ptr EGLuint64KHR): EGLBoolean {.cdecl, importc.}
proc eglGetFrameTimestampSupportedANDROID*(dpy: EGLDisplay, surface: EGLSurface, timestamp: EGLint): EGLBoolean {.cdecl, importc.}
proc eglGetFrameTimestampsANDROID*(dpy: EGLDisplay, surface: EGLSurface, frameId: EGLuint64KHR, numTimestamps: EGLint, timestamps: ptr EGLint, values: ptr EGLnsecsANDROID): EGLBoolean {.cdecl, importc.}
proc eglGetNativeClientBufferANDROID*(buffer: ptr AHardwareBuffer): EGLClientBuffer {.cdecl, importc.}
proc eglPresentationTimeANDROID*(dpy: EGLDisplay, surface: EGLSurface, time: EGLnsecsANDROID): EGLBoolean {.cdecl, importc.}
proc eglCreateSyncKHR*(dpy: EGLDisplay, typep: EGLenum, attrib_list: ptr EGLint): EGLSyncKHR {.cdecl, importc.}
proc eglDestroySyncKHR*(dpy: EGLDisplay, sync: EGLSyncKHR): EGLBoolean {.cdecl, importc.}
proc eglClientWaitSyncKHR*(dpy: EGLDisplay, sync: EGLSyncKHR, flags: EGLint, timeout: EGLTimeKHR): EGLint {.cdecl, importc.}
proc eglGetSyncAttribKHR*(dpy: EGLDisplay, sync: EGLSyncKHR, attribute: EGLint, value: ptr EGLint): EGLBoolean {.cdecl, importc.}
proc eglCreateImageKHR*(dpy: EGLDisplay, ctx: EGLContext, target: EGLenum, buffer: EGLClientBuffer, attrib_list: ptr EGLint): EGLImageKHR {.cdecl, importc.}
proc eglDestroyImageKHR*(dpy: EGLDisplay, image: EGLImageKHR): EGLBoolean {.cdecl, importc.}
proc eglLockSurfaceKHR*(dpy: EGLDisplay, surface: EGLSurface, attrib_list: ptr EGLint): EGLBoolean {.cdecl, importc.}
proc eglUnlockSurfaceKHR*(dpy: EGLDisplay, surface: EGLSurface): EGLBoolean {.cdecl, importc.}
proc eglSetDamageRegionKHR*(dpy: EGLDisplay, surface: EGLSurface, rects: ptr EGLint, n_rects: EGLint): EGLBoolean {.cdecl, importc.}
proc eglSignalSyncKHR*(dpy: EGLDisplay, sync: EGLSyncKHR, mode: EGLenum): EGLBoolean {.cdecl, importc.}
proc eglSwapBuffersWithDamageKHR*(dpy: EGLDisplay, surface: EGLSurface, rects: ptr EGLint, n_rects: EGLint): EGLBoolean {.cdecl, importc.}
proc eglWaitSyncKHR*(dpy: EGLDisplay, sync: EGLSyncKHR, flags: EGLint): EGLint {.cdecl, importc.}